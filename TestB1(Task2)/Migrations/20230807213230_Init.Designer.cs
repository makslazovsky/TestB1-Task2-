// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestB1_Task2_.DAL;

#nullable disable

namespace TestB1_Task2_.Migrations
{
    [DbContext(typeof(FilesDbContext))]
    [Migration("20230807213230_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestB1_Task2_.Models.BalanceInfoFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileInfos");
                });

            modelBuilder.Entity("TestB1_Task2_.Models.BalanceInfoRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("ClosingBalanceAsset")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosingBalanceLiability")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CreditTurnover")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DebitTurnover")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileInfoId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningBalanceAsset")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningBalanceLiability")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ParentAccountNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileInfoId");

                    b.ToTable("FileRecords");
                });

            modelBuilder.Entity("TestB1_Task2_.Models.BalanceInfoRecord", b =>
                {
                    b.HasOne("TestB1_Task2_.Models.BalanceInfoFile", "FileInfo")
                        .WithMany("Records")
                        .HasForeignKey("FileInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileInfo");
                });

            modelBuilder.Entity("TestB1_Task2_.Models.BalanceInfoFile", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
